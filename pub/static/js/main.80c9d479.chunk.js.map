{"version":3,"sources":["Common/Header/Header.module.css","Common/DescriptionBlock/DescriptionBlock.module.css","Common/Question/QuestionBlock.module.css","Common/AnswerBlock/AnswerBlock.module.css","Common/AnswerBlock/sound/pos.mp3","Common/AnswerBlock/sound/neg.mp3","Common/Header/img/logo.jpg","Common/Question/img/anonimous.jpg","Common/birdsData/birdsData.js","Common/Header/Header.jsx","Common/Question/QuestionBlock.jsx","Common/AnswerBlock/AnswerBlock.jsx","Common/DescriptionBlock/DescriptionBlock.jsx","Common/DescriptionBlock/EmptyDescriptionBlock.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","birdsData","id","name","species","description","image","audio","Header","state","filterCss0","filterCss1","filterCss2","filterCss3","filterCss4","filterCss5","checkIteration","render","props","numberOfLevel","setState","className","styles","header","src","logo","score","questionList","React","Component","QuestionBlock","answerStatus","question","imgBird","bird","anonimous","enigma","nameBird","controls","player","audioBird","AnswerBlock","makeAnswer","e","currentTarget","ArrayBird","map","element","index","type","checked","onChange","randomQuestionNumber","positive","negative","passive","answer","DescriptionBlock","descriptionBlock","arrayBird","spanName","spanSpecies","myPlayer","emptyDescription","App","quantityAnswer","userAnswer","gameOver","birdData","options","style","start","randomNumber","Math","floor","random","length","tempBirdData","nextLevel","alert","resetBirdDataChecked","checkAnswer","birdDataNew","bonus","player1","play","player2","soundPositive","ref","soundNegative","EmptyDescriptionBlock","onClick","disabled","this","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.80c9d479.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__K72t6\",\"logo\":\"Header_logo__3rkZd\",\"score\":\"Header_score__3m1SQ\",\"questionList\":\"Header_questionList__Slk4k\",\"passive\":\"Header_passive__2k9i1\",\"active\":\"Header_active__3gGG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emptyDescription\":\"DescriptionBlock_emptyDescription__3tCU4\",\"descriptionBlock\":\"DescriptionBlock_descriptionBlock__Ilh-3\",\"spanName\":\"DescriptionBlock_spanName__3Kb1-\",\"spanSpecies\":\"DescriptionBlock_spanSpecies__2vN3i\",\"myPlayer\":\"DescriptionBlock_myPlayer__2Vrpg\",\"description\":\"DescriptionBlock_description__31rsV\",\"image\":\"DescriptionBlock_image__C94YD\",\"player\":\"DescriptionBlock_player__2qf1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"QuestionBlock_question__2XmuB\",\"bird\":\"QuestionBlock_bird__1kwk6\",\"player\":\"QuestionBlock_player__2lHT1\",\"enigma\":\"QuestionBlock_enigma__2FDlB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"AnswerBlock_answer__20tEr\",\"answerList\":\"AnswerBlock_answerList__3F5_4\",\"passive\":\"AnswerBlock_passive__2CslQ\",\"negative\":\"AnswerBlock_negative__1NZ9P\",\"active\":\"AnswerBlock_active__Qpou0\",\"positive\":\"AnswerBlock_positive__23CxP\"};","module.exports = __webpack_public_path__ + \"static/media/pos.d0c5f222.mp3\";","module.exports = __webpack_public_path__ + \"static/media/neg.ffb37db0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.b115ede5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/anonimous.be13e6aa.jpg\";","const birdsData = [\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Ворон',\r\n            species: 'Corvus corax',\r\n            description: 'Ворон – крупная птица. Длина тела достигает 70 сантиметров, размах крыльев – до полутора метров. Вороны населяют окрестности Тауэра. В Англии бытует поверье, что в день, когда черные вороны улетят от Тауэра, монархия рухнет.',\r\n            image: 'https://live.staticflickr.com//65535//49298804222_474cfe8682.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/XIQVMQVUPP/XC518684-Grands%20corbeaux%2009012020%20Suzon.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Журавль',\r\n            species: 'Grus grus',\r\n            description: 'Звуки, издаваемые журавлем, похожи на звонкое «кур-лы – кур-лы». Журавли чаще всего поют дуэтом – одна птица начинает запев со слога «кур», а вторая подхватывает «лы». Если птица поёт одна, то она издает только звук «кур».',\r\n            image: 'https://live.staticflickr.com/65535/49221158846_b0b69a58f1.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC512582-190604_1087_Grus_tok.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ласточка',\r\n            species: 'Delichon urbicum',\r\n            description: 'Для ласточек характерно негромкое щебетание. Песни ласточек не смолкают на протяжении всего лета. Исследователи различают у птиц до 6 щебечущих звуков: «вит», «ви-вит», «чивит», «чиривит» и т.п. Ласточки любят петь дуэтом.',\r\n            image: 'https://live.staticflickr.com//65535//48539007512_5029d2a9a0.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC489247-190724_09.10h_huiszwaluw_biesbosch_amaliahoeve_roep_100%2Bex_fouragerend_gezien_%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Козодой',\r\n            species: 'Caprimulgus europaeus',\r\n            description: 'Козодой – неприметная птица, известная благодаря своему голосу. Песня козодоя звучит как монотонная трель похожая на тарахтение мотоцикла. Такое дребезжание слышно от заката до рассвета, его тональность, частота и громкость изменяются. ',\r\n            image: 'https://live.staticflickr.com/65535/48456345286_dbc8530027.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC486956-190623_22.37h_nachtzwaluw_rechte%20heide_zang_ad%20_2ex_gezien_.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Кукушка',\r\n            species: 'Cuculus canorus',\r\n            description: 'Кукушку назвали так из-за особенностей ее песен. Звонкое «ку-ку» не спутать ни с какой другой птицей. Кукушки не строят гнезда, их потомство выращивают другие виды пернатых, которым кукушки подбрасывают свои яйца.',\r\n            image: 'https://live.staticflickr.com/65535/48377838151_e15f430ec1.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC501461-190616_08.13h_koekoek_brabantse%20biesbosch%20jantjesplaat_roep_1%20ex_ad%20m_ter%20plaatse%20zingend_gezien_.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Синица',\r\n            species: 'Parus major',\r\n            description: 'В щебетании синиц различают более 40 различных звуковых сочетаний. Поют они практически круглый год, немного затихая только зимой. Синицы настоящие санитары леса. Одна пара синиц в период гнездования оберегает от вредителей десятки деревьев.',\r\n            image: 'https://live.staticflickr.com//65535//49366042493_c48c81d58d.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/RFGQDPLDEC/XC518417-Kj%C3%B8ttmeis%20XC%20Helg%C3%B8ya%20Elias%20A.%20Ryberg20200108133922_079.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Воробей',\r\n            species: 'Passer domesticus',\r\n            description: 'Воробьи являются самыми известными и узнаваемыми пернатыми. Их легко узнать по пестрому оперению и задорному чириканью. Воробьи относятся к синатропному виду — они селятся поблизости к человеческому жилищу.',\r\n            image: 'https://live.staticflickr.com//65535//49366595303_06cf65b07e.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/CXFHOPIVAS/XC503224-191020_0134.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Грач',\r\n            species: 'Corvus frugilegus',\r\n            description: 'Грачи очень умные и сообразительные птицы. С помощью клюва они создают и используют простейшие орудия. У грачей развит рефлекс на звуки трактора. Услышав «тарахтение», они летят на звук – трактор пашет землю, значит, в этом месте много корма.',\r\n            image: 'https://live.staticflickr.com//65535//49347123322_291c86b016.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/RLRHCUIPIY/XC512540-gawron%20Suble%2019.12.19%20%2012.35.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Галка',\r\n            species: 'Coloeus monedula',\r\n            description: 'Слово «галка» произошло из старославянского языка и переводится как «чёрный». Этим словом часто называют воронов или других черных птиц. Латинское название галки «monedula» связывают со словами монета за любовь птицы к блестящим и ярким вещам.',\r\n            image: 'https://live.staticflickr.com//65535//49237149586_993cf685c5.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC510498-Coloeus%20monedula_2019.11.13_11.55_01.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Певчий дрозд',\r\n            species: 'Turdus philomelos',\r\n            description: 'Дрозд — лучший певец из отряда воробьиных. Песня состоит только из красивых звучных свистов и коротких трелей. Чаще всего её можно услышать в утреннее и вечернее время. Поют дрозды в течении всего периода гнездования.',\r\n            image: 'https://live.staticflickr.com/65535/48979125763_e2534f54bd.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC513326-190704_1146_TF-Glogow.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Сорока',\r\n            species: 'Pica pica',\r\n            description: 'Сорока очень трудолюбивая птица. Она строит до восьми гнёзд, а потом выбирает из них самое лучшее. Вход в гнездо сорок всегда обращен на юг, чтобы в жилище было теплее. Сороки являются единственными птицами, которые узнают себя в зеркале.',\r\n            image: 'https://live.staticflickr.com//65535//49360363066_ff02bb6a73.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC500868-Pica%20pica2019.08.23_09.18_02.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Сойка',\r\n            species: 'Garrulus glandarius',\r\n            description: 'Когда сойка волнуется, хохолок на её голове взъерошивается. Птица старается создать устрашающее зрелище. Сойки умеют имитировать голоса других птиц, животных и звуки, которые создает человек. На зиму они делают большие запасы желудей и орехов.',\r\n            image: 'https://live.staticflickr.com//65535//49369678956_9a7465c7f4.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/TFOGOENSTQ/XC501517-191008_1590%201300.%20Eichelh%C3%A4her%20D%2C%20NW%2C%20LEV.%20Stephan%20Risch.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Зяблик',\r\n            species: 'Fringilla coelebs',\r\n            description: 'В дикой природе насчитывается 450 видов зябликов. Зимой зяблики ведут стайный образ жизни. Иногда в их семьях можно увидеть воробьев. Запевают зяблики весной, с наступлением брачного периода. Их пение – это заливистые многоминутные рулады.',\r\n            image: 'https://live.staticflickr.com/65535/49143150817_2d3a2f6c1e.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC512407-150622_03%20zi%C4%99ba%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Клёст',\r\n            species: 'Loxia curvirostra',\r\n            description: 'Клестов называют «рождественскими» птицами. В естественных условиях они дают потомство зимой – в январе. Эти птицы утепляют свои гнезда мхом и шерстью животных, потому птенцам не холодно. В поисках шишек клесты могут улетать за 3500 км от гнезда.',\r\n            image: 'https://live.staticflickr.com//65535//49365470123_f2de66bb35.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/OTVUCEGYZN/XC495381-Kruisbek%20roep%20NHD%20290619.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Горлица',\r\n            species: 'Streptopelia turtur',\r\n            description: 'Горлица обитает в смешанных и широколиственных лесах, а также в городских парках и поселках. Птицы часто выбирают места жизни рядом с человеком и легко привыкают к людям. Благодаря мелодичному приятному пению горлиц часто разводят в домашних условиях.',\r\n            image: 'https://live.staticflickr.com/65535/48063004977_84252f9ceb.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC324106-Turkawka_Streptopelia_turtur_Poland_Jarek_Matusiak_2011625_07.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Дятел',\r\n            species: 'Dendrocopos major',\r\n            description: 'Дятел – заметная и шумная птица, часто живет рядом с человеком. С середины января до конца июня можно услышать «барабанную дробь» дятлов – трель от вибрации веток под быстрыми ударами клюва птицы. В хорошую погоду дробь слышна в радиусе 1,5 км.',\r\n            image: 'https://live.staticflickr.com/65535/49339376578_e933426455.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC518928-AB-017%20dzi%C4%99cio%C5%82%20du%C5%BCy%20agresja%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Удод',\r\n            species: 'Upupa epops',\r\n            description: 'Удоды предпочитают жить на открытых ландшафтах с отдельными деревьями или рощами. Наиболее удобными для птицы являются лесостепь и саванна. Удод может выбирать места жительства рядом с человеком: пастбища, виноградники, фруктовые сады.',\r\n            image: 'https://live.staticflickr.com//65535//49226383598_6f8be86a06.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC477326-dudek%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Стриж',\r\n            species: 'Apus apus',\r\n            description: 'Стрижа можно увидеть практически в каждом уголке планеты. Они обитают как в лесных зонах, так и на открытых местностях. Живут стрижи крупными стаями. Большие колонии этих птиц можно увидеть в городах или на прибрежных скалах.',\r\n            image: 'https://live.staticflickr.com//65535//48386150031_7b749df74b.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/TMUAWSDHDJ/XC511871-G.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Жаворонок',\r\n            species: 'Alauda arvensis',\r\n            description: 'Жаворонки — перелетные птицы. С начала сентября они отлетают на юг. Возвращаются они в начале марта, независимо от того, сошел снег или нет. По прилету жаворонков определяли наступление весны и пору, когда пора пахать землю.',\r\n            image: 'https://live.staticflickr.com/65535/47105096764_f751fba568.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC462158-Skowronek_Alauda_arvensis_Poland_Jarek_Matusiak_%20-006%20skowronek%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Соловей',\r\n            species: 'Luscinia luscinia',\r\n            description: 'Соловьи поют с начала мая и до конца лета. Каждая песня соловья состоит из 12 повторяющихся элементов, которые еще называют коленами. Кроме собственных трелей, соловьи легко и хорошо перенимают пение других птиц.',\r\n            image: 'https://live.staticflickr.com/7605/27669397735_f3c21758f2.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/HILVWSADVL/XC513809-R07_0052%20Thrush%20Nightingale%20Snipe.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Скворец',\r\n            species: 'Sturnus vulgaris',\r\n            description: 'Скворцы - перелётные птицы. Синхронный перелет больших стай скворцов называется мурмурацией. Это красивое и завораживающее явление – множество птиц будто танцуют в воздухе, образуя замысловатые фигуры, которые уменьшаются и увеличиваются в небе.',\r\n            image: 'https://live.staticflickr.com/65535/49357593971_9509fe1d7c.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC515519-2020.01.01_17.24_01.MP3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Иволга',\r\n            species: 'Oriolus oriolus',\r\n            description: 'Мелодичность голоса иволги сравнивают со звучанием флейты. Человеку сложно разглядеть иволгу, так как она обитает высоко на деревьях. Иволга не только очень красивая, но и  полезная птица. Она уничтожает ядовитых гусениц, которых не поедают другие птицы.',\r\n            image: 'https://live.staticflickr.com/65535/47102184004_58a93380b9.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC491801-2019.07.07_06.28_01.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Свиристель',\r\n            species: 'Bombycilla garrulus',\r\n            description: 'У свиристели очень цепкие коготки, что помогает птице удерживаться на ветках и склевывать ягоды, которые труднее всего достать. В период ухаживаний самец предлагает самке ягоду или другое угощение. Если самка его принимает, то птицы создают пару.',\r\n            image: 'https://live.staticflickr.com//65535//49367433842_1b06da0e6b.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC517421-AB-004%20%282%29%20jemio%C5%82uszka.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Щегол',\r\n            species: 'Carduelis carduelis',\r\n            description: 'Щеглы поют красиво и мелодично. И в природе, и в неволе они щебечут почти круглый год. В пении щегла различают более 20 переливчатых трелей. Щеглы привыкают к людям, и даже могут возвратиться к хозяину после того, как их выпустили на волю',\r\n            image: 'https://live.staticflickr.com//65535//49366257253_db3ce48b9a.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC489265-190724_07.58h_putter_biesbosch_%20boompjes%20langs%20open%20water_zang_1ex_ad_niet%20gezien_.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Орёл',\r\n            species: 'Aquila nipalensis',\r\n            description: 'В древние времена орел был символом солнца. Орлы часто парят над землей, при этом скорость их перемещения может достигать 240 км/ч. Иллюзия медленного движения происходит из-за высоты полета – более 700 метров',\r\n            image: 'https://live.staticflickr.com//4835//43867392960_7105d71e19.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/KTBTZAHSXF/10_Aquila_nipalensis_al02D85.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Коршун',\r\n            species: 'Milvus migrans',\r\n            description: 'Коршуны – крупные хищники, в высоту они достигают около полуметра, а вес взрослых особей достигает 1 кг. Крылья узкие и длинные, их размах составляет 1,5 м. Коршуны часто гнездятся большими стаями и даже образуют крупные колонии.',\r\n            image: 'https://live.staticflickr.com//65535//48701190276_ee2a9ed594.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/SDPCHKOHRH/XC485740-2019-06-22%20Selenga%20Milan%20brun%20cris%20de%20quemandage%203.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Лунь',\r\n            species: 'Circus cyaneus',\r\n            description: 'Лунь – это небольшой сокол. Питается в основном мышевидными грызунами, основа его рациона – полёвки, хомяки, мыши. Оперение луня может быть пепельно-серым. С такой птицей связано сравнение «седой, как лунь».',\r\n            image: 'https://live.staticflickr.com/65535/49322743903_32f3922d9e.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC513498-190709_1175_Cir.cyan-f.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Сокол',\r\n            species: 'Falco peregrinus',\r\n            description: 'Латинское название сокола Falco произошло от слова «серп» из-за серповидной формы крыльев. Длинные и широкие крылья позволяют соколу высоко подниматься в небо и свободно парить. Скорость полёта сокола достигает 280-320 километров в час.',\r\n            image: 'https://live.staticflickr.com//65535//49310710607_92a3a145a9.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/MMEJYLOPDO/XC496049-Pilgrimsfalk_06.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Ястреб',\r\n            species: 'Accipiter gentilis',\r\n            description: 'Для всех ястребов характерны широкие и короткие крылья. Ещё один отличительный признак - белые «брови» над глазами. Славянские дружинники размещали изображение ястреба на своих знаменах, как символ отваги, мощи и безжалостности к врагам.',\r\n            image: 'https://live.staticflickr.com//65535//49024617331_b9d0d2c9b3.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/MMEJYLOPDO/XC512740-Duvh%C3%B6k_09.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Филин',\r\n            species: 'Bubo bubo',\r\n            description: 'Полет филина бесшумный, зрение очень острое. Эти особенности делают птицу непревзойденным ночным охотником. У филина нет естественных врагов, ни один зверь не охотится на взрослых птиц. А вот на птенцов нападают лисы и волки.',\r\n            image: 'https://live.staticflickr.com/65535/48137123012_393653c2e4.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/WNLIDKJKXT/XC518386-sense%20t%C3%ADtol.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Альбатрос',\r\n            species: 'Diomedea exulans',\r\n            description: 'Альбатрос - самая крупная летающая птица в мире. Размах крыльев достигает три с половиной, вес - десять килограммов. Большую часть жизни альбатросы проводят в воздухе, покрывая над океанскими просторами огромные расстояния',\r\n            image: 'https://live.staticflickr.com/7557/16260253965_8e9430cb66.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/WOEAFQRMUD/XC293087-Diomedea%20exulans151120_T254.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Олуша',\r\n            species: 'Sula nebouxii',\r\n            description: 'Особенностью голубоногой олуши является не только насыщенный ярко-синий цвет лапок, но еще и тот факт, что они очень теплые. В то время как другие виды птиц греют кладки своим телом, голубоногая олуша делает это с помощью лапок',\r\n            image: 'https://live.staticflickr.com/800/40645471394_4422e69ed8.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/YHKQPPJDVP/XC411507-171217_1491%20BF%20Booby%205ft%20IDLP%201230%20mp3%20amp.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Буревестник',\r\n            species: 'Puffinus griseus',\r\n            description: 'Размеры буревестниковых разные. Самые маленькие из них в длину составляют до 25 см, самые большие - до 1 м, при размахе крыльев около 2 м. Существует поверье, что появление буревестника в воздухе предвещает бурю, о чем говорит само название птицы.',\r\n            image: 'https://live.staticflickr.com//607//22136056020_935cb113f9.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/XQEVNREHJY/SHEARWATER%20Christmas%20Island_04_Motu_Isla%20de%20Pascua-Easter%20Island_CH_4MAR03_Alvaro%20Jaramillo.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Пеликан',\r\n            species: 'Pelecanus',\r\n            description: 'Пеликаны — обитатели морей и рек. Ходят они неуклюже, но хорошо летают и плавают. Питаются в основном рыбой, устраивают коллективные охоты — выстроившись полукругом хлопают по воде крыльями и клювами и вытесняют напуганную рыбу на мелководье.',\r\n            image: 'https://live.staticflickr.com/7885/46523771945_9496c2a191.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/XAMHIHFTZG/XC331138-call1.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Пингвин',\r\n            species: 'Aptenodytes forsteri',\r\n            description: 'Самец императорского пингвина достигает роста 130 см, его масса может приближаться к 50 кг. Из всех современных пингвинов этот вид – самый крупный. Питание пингвина состоит из рыбы, кальмаров и криля. Охотятся птицы в океане большими группами.',\r\n            image: 'https://live.staticflickr.com/5202/5252413926_8e013a3efd.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/OOECIWCSWV/XC449827-LS100829%20King%20Penguin%20call%20A.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Чайка',\r\n            species: 'Larus argentatus',\r\n            description: 'Чайки населяют берега морей, озёр, рек, водохранилищ, болот, часто гнездятся на островах. С конца прошлого века чайки стали появляться в крупных городах, где устраивает гнёзда на крышах зданий. Все чайки ведут колониальный образ жизни.',\r\n            image: 'https://live.staticflickr.com/65535/48577115317_7034201dde.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC501190-190801_06.50h_zilvermeeuw_duinen%20van%20goeree_roep_2ex_overvliegend_gezien_.mp3'\r\n        }\r\n    ]\r\n];\r\n\r\nexport default birdsData;","import React from 'react';\nimport logo from '../Header/img/logo.jpg'\nimport styles from './Header.module.css';\n\nclass Header extends React.Component {\n\n\n    state = {\n        filterCss0: \"active\",\n        filterCss1: \"passive\",\n        filterCss2: \"passive\",\n        filterCss3: \"passive\",\n        filterCss4: \"passive\",\n        filterCss5: \"passive\",\n    };\n\n\n     checkIteration=0;\n    render = () => {\n\n        if (this.props.numberOfLevel==1 && this.checkIteration==0) {\n            this.setState({filterCss1: \"active\", filterCss0:\"passive\"})\n            this.checkIteration=this.checkIteration+1\n        }\n        else if (this.props.numberOfLevel==2 && this.checkIteration==1) {\n            this.setState({filterCss2: \"active\", filterCss1:\"passive\"})\n            this.checkIteration=this.checkIteration+1\n        }\n        else if (this.props.numberOfLevel==3 && this.checkIteration==2) {\n            this.setState({filterCss3: \"active\", filterCss2:\"passive\"})\n            this.checkIteration=this.checkIteration+1\n        }\n        else if (this.props.numberOfLevel==4 && this.checkIteration==3) {\n            this.setState({filterCss4: \"active\", filterCss3:\"passive\"})\n            this.checkIteration=this.checkIteration+1\n        }\n        else if (this.props.numberOfLevel==5 && this.checkIteration==4) {\n            this.setState({filterCss5: \"active\", filterCss4:\"passive\"})\n            this.checkIteration=this.checkIteration+1\n        }\n\n\n        return (\n\n            <div className={styles.header}>\n\n                <img src={logo} className={styles.logo}/>\n                <span className={styles.score}>  Score={this.props.score} </span>\n\n                        <ul className={styles.questionList}>\n                            <li className={styles[this.state.filterCss0] }>Разминка</li>\n                            <li className={styles[this.state.filterCss1] }>Воробьиные</li>\n                            <li className={styles[this.state.filterCss2] }>Певчие птицы</li>\n                            <li className={styles[this.state.filterCss3] }>Лесные птицы</li>\n                            <li className={styles[this.state.filterCss4] }>Хищные птицы</li>\n                            <li className={styles[this.state.filterCss5] }>Морские птицы</li>\n\n                        </ul>\n\n                 </div>\n\n        );\n    }\n}\n\nexport default Header;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport anonimous from '../Question/img/anonimous.jpg'\nimport styles from './QuestionBlock.module.css';\n\n\nclass QuestionBlock extends React.Component {\n\n\n    render = () => {\n\n        let answerStatus =this.props.answerStatus\n\n\n              return (\n\n            <div className={styles.question}>\n\n                {answerStatus ?\n                    <div><img src={this.props.imgBird} className={styles.bird}/></div>\n                    :\n                    <div><img src={anonimous} className={styles.bird}/></div>}\n                <div>\n                    {answerStatus ? <div className={styles.enigma}>{this.props.nameBird}</div>:<div className={styles.enigma}>*******</div>}\n                        <hr/>\n\n                    <audio controls=\"controls\" className={styles.player}\n                        src={this.props.audioBird}>\n                    </audio>\n\n                </div>\n\n             </div>\n\n        );\n    }\n}\n\nexport default QuestionBlock;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport styles from './AnswerBlock.module.css';\nclass AnswerBlock extends React.Component {\n\n\n    makeAnswer=(e)=> {\n        this.props.makeAnswer(e.currentTarget.id)\n           // function (id)\n         };\n\n\n\n    render = () => {\n\n\n              let bird=this.props.ArrayBird.map ((element, index) =>\n                    <div>\n\n                     <label>\n                        <input\n                             type={\"radio\"}\n                             checked={element.checked}\n                             id={index}\n                             onChange={this.makeAnswer}\n                             // onChange={()=>this.makeAnswer(element.id)}\n                         />\n                         <span className={ element.checked ?\n                             (index==this.props.randomQuestionNumber ? styles.positive : styles.negative)\n                             : styles.passive }>\n\n                             {element.name} </span>\n                     </label>\n                    </div>\n                                        )\n\n        return (\n            <div className={styles.answer}>\n                {bird}\n             </div>\n\n        );\n    }\n}\n\nexport default AnswerBlock;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport styles from './DescriptionBlock.module.css';\n\nclass DescriptionBlock extends React.Component {\n\n\n    render = () => {\n\n        return (\n\n            <div className={styles.descriptionBlock}>\n\n                <img className={styles.image} src={this.props.arrayBird.image} />\n\n\n\n                <div className={styles.spanName}> {this.props.arrayBird.name} </div>\n                <div className={styles.spanSpecies}> {this.props.arrayBird.species} </div>\n\n                <div className={styles.myPlayer}>\n\n                    <audio controls=\"controls\" className={styles.player}\n                        src={this.props.audioBird}>\n                    </audio>\n\n\n\n                </div>\n\n                <div className={styles.description}> {this.props.arrayBird.description} </div>\n\n             </div>\n\n        );\n    }\n}\n\nexport default DescriptionBlock;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport styles from './DescriptionBlock.module.css';\n\n\nclass DescriptionBlock extends React.Component {\n\n\n    render = () => {\n\n        return (\n\n\n            <div className={styles.emptyDescription}>\n\n                Послушайте плеер.\n                <br/>\n                Выберите птицу из списка\n\n             </div>\n\n        );\n    }\n}\n\nexport default DescriptionBlock;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport birdsData from \"./Common/birdsData/birdsData\";\nimport './App.css';\nimport soundPositive from './Common/AnswerBlock/sound/pos.mp3'\nimport soundNegative from './Common/AnswerBlock/sound/neg.mp3'\nimport Header from \"./Common/Header/Header\";\nimport QuestionBlock from \"./Common/Question/QuestionBlock\";\nimport AnswerBlock from \"./Common/AnswerBlock/AnswerBlock\";\nimport DescriptionBlock from \"./Common/DescriptionBlock/DescriptionBlock\";\nimport EmptyDescriptionBlock from \"./Common/DescriptionBlock/EmptyDescriptionBlock\";\n\nclass App extends React.Component {\n\n    state = {\n        score: 0,\n        numberOfLevel: 0,\n        randomQuestionNumber: 0,\n        quantityAnswer: 0,\n        userAnswer: null,\n        answerStatus: false,\n        gameOver: false,\n        birdData:[]\n    };\n\n    options = [\n        {style: \"style1\", checked: false},\n        {style: \"style2\", checked: false},\n        {style: \"style3\", checked: false},\n        {style: \"style4\", checked: false},\n        {style: \"style5\", checked: false},\n        {style: \"style6\", checked: false}   ];\n\n\n    componentDidMount() {\n        this.start();\n\n         }\n\n    start = () => {\n        let randomNumber = Math.floor(Math.random() * birdsData[this.state.numberOfLevel].length);\n        this.setState({randomQuestionNumber: randomNumber});\n\n        let tempBirdData = birdsData[this.state.numberOfLevel].map((element, index) => {\n            return {...element, ...this.options[index]}\n        });\n        this.setState({birdData: tempBirdData});\n          };\n\n    nextLevel = () => {\n        if (this.state.numberOfLevel >= birdsData.length - 1) {\n            if (this.state.score > 5) {alert(\"Поздравляем вы набрали 30 баллов, ответили на все вопросы!!!\");}\n            this.setState({answerStatus: true});\n        } else {\n            this.setState({numberOfLevel: this.state.numberOfLevel + 1}, this.start);\n            this.setState({quantityAnswer: 0});\n            this.setState({userAnswer: null});\n            this.setState({answerStatus: false});\n                          let resetBirdDataChecked=this.state.birdData.map ((element) => {\n                    { return {...element, checked: false }\n                    } } );\n                this.setState({birdData: resetBirdDataChecked});\n\n        } };\n\n    makeAnswer = (id) => {\n        this.setState({userAnswer:id}, this.checkAnswer);\n        let birdDataNew=this.state.birdData.map ((element, index) => {\n             if (index == id) {{\n                    return {...element, checked: true }\n                }} else { return element }} );\n        this.setState({birdData: birdDataNew})  };\n\n\n    checkAnswer = () => {\n        let bonus = 5 - this.state.quantityAnswer;\n        if (this.state.randomQuestionNumber == this.state.userAnswer) {\n            this.setState({answerStatus: true});\n            this.setState({score: this.state.score + bonus});\n            this.player1.play();\n        } else {\n            this.player2.play();\n        }\n        this.setState({quantityAnswer: this.state.quantityAnswer + 1});\n    };\n\n\n    render = () => {\n\n        return (\n                <div className=\"App\">\n                <div className={\"mainWrapper\"}>\n                <div>\n\n                    <audio src={soundPositive} ref={ref => (this.player1 = ref)} ></audio>\n                    <audio src={soundNegative} ref={ref => (this.player2 = ref)} ></audio>\n\n                        <Header\n                            numberOfLevel={this.state.numberOfLevel}\n                            score={this.state.score}                 />\n                </div>\n\n                <div>\n                        <QuestionBlock\n                            answerStatus={this.state.answerStatus}\n                            nameBird={birdsData[this.state.numberOfLevel][this.state.randomQuestionNumber].name}\n                            imgBird={birdsData[this.state.numberOfLevel][this.state.randomQuestionNumber].image}\n                            audioBird={birdsData[this.state.numberOfLevel][this.state.randomQuestionNumber].audio}\n                        />\n                 </div>\n\n\n                <div className=\"answerAndDescr\">\n                    <AnswerBlock\n                        ArrayBird={this.state.birdData}\n                        makeAnswer={this.makeAnswer}\n                        userAnswer={this.state.userAnswer}\n                        answerStatus={this.state.answerStatus}\n                        randomQuestionNumber = {this.state.randomQuestionNumber}\n                      />\n\n                    {(this.state.userAnswer) ?\n                        <DescriptionBlock\n                            arrayBird={birdsData[this.state.numberOfLevel][this.state.userAnswer]}\n                            audioBird={birdsData[this.state.numberOfLevel][this.state.userAnswer].audio}\n                        />\n                        :\n                        <EmptyDescriptionBlock/>}\n                </div>\n\n\n                    {  (this.state.answerStatus==true\n                        && this.state.numberOfLevel == 5) ?\n                                                           <button className={\"nextLevelButtonEnabled\"}\n                                                           onClick={this.nextLevel}>\n                                                           Поздравляем! Вы прошли викторину и набрали\n                                                           {this.state.score} из 30 возможных баллов </button>\n                                                           :\n                                                           <button className={!this.state.answerStatus ?\n                                                           \"nextLevelButtonDisabled\" : \"nextLevelButtonEnabled\" }\n                                                           onClick={this.nextLevel}\n                                                           disabled={!this.state.answerStatus}>\n                                                           next level</button>}\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}